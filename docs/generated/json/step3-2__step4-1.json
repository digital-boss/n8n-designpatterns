{"url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/compare/step3-2...step4-1","html_url":"https://github.com/digital-boss/n8n-nodes-designpatterns-tutorial/compare/step3-2...step4-1","permalink_url":"https://github.com/digital-boss/n8n-nodes-designpatterns-tutorial/compare/digital-boss:13f50ac...digital-boss:61b65ab","diff_url":"https://github.com/digital-boss/n8n-nodes-designpatterns-tutorial/compare/step3-2...step4-1.diff","patch_url":"https://github.com/digital-boss/n8n-nodes-designpatterns-tutorial/compare/step3-2...step4-1.patch","base_commit":{"sha":"13f50acf40a51076ea7960a3b44228a30b52d6e0","node_id":"C_kwDOHw6kqtoAKDEzZjUwYWNmNDBhNTEwNzZlYTc5NjBhM2I0NDIyOGEzMGI1MmQ2ZTA","commit":{"author":{"name":"maestrow","email":"andrew.shmelev@gmail.com","date":"2022-08-06T15:04:25Z"},"committer":{"name":"maestrow","email":"andrew.shmelev@gmail.com","date":"2022-08-06T15:04:25Z"},"message":"update workflow","tree":{"sha":"41fb108238498979b310d8f0fcc88f487bf5246c","url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/git/trees/41fb108238498979b310d8f0fcc88f487bf5246c"},"url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/git/commits/13f50acf40a51076ea7960a3b44228a30b52d6e0","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/commits/13f50acf40a51076ea7960a3b44228a30b52d6e0","html_url":"https://github.com/digital-boss/n8n-nodes-designpatterns-tutorial/commit/13f50acf40a51076ea7960a3b44228a30b52d6e0","comments_url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/commits/13f50acf40a51076ea7960a3b44228a30b52d6e0/comments","author":{"login":"maestrow","id":671853,"node_id":"MDQ6VXNlcjY3MTg1Mw==","avatar_url":"https://avatars.githubusercontent.com/u/671853?v=4","gravatar_id":"","url":"https://api.github.com/users/maestrow","html_url":"https://github.com/maestrow","followers_url":"https://api.github.com/users/maestrow/followers","following_url":"https://api.github.com/users/maestrow/following{/other_user}","gists_url":"https://api.github.com/users/maestrow/gists{/gist_id}","starred_url":"https://api.github.com/users/maestrow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/maestrow/subscriptions","organizations_url":"https://api.github.com/users/maestrow/orgs","repos_url":"https://api.github.com/users/maestrow/repos","events_url":"https://api.github.com/users/maestrow/events{/privacy}","received_events_url":"https://api.github.com/users/maestrow/received_events","type":"User","site_admin":false},"committer":{"login":"maestrow","id":671853,"node_id":"MDQ6VXNlcjY3MTg1Mw==","avatar_url":"https://avatars.githubusercontent.com/u/671853?v=4","gravatar_id":"","url":"https://api.github.com/users/maestrow","html_url":"https://github.com/maestrow","followers_url":"https://api.github.com/users/maestrow/followers","following_url":"https://api.github.com/users/maestrow/following{/other_user}","gists_url":"https://api.github.com/users/maestrow/gists{/gist_id}","starred_url":"https://api.github.com/users/maestrow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/maestrow/subscriptions","organizations_url":"https://api.github.com/users/maestrow/orgs","repos_url":"https://api.github.com/users/maestrow/repos","events_url":"https://api.github.com/users/maestrow/events{/privacy}","received_events_url":"https://api.github.com/users/maestrow/received_events","type":"User","site_admin":false},"parents":[{"sha":"a4e2db6b86e685506bf0d9b829397d4ab7b65073","url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/commits/a4e2db6b86e685506bf0d9b829397d4ab7b65073","html_url":"https://github.com/digital-boss/n8n-nodes-designpatterns-tutorial/commit/a4e2db6b86e685506bf0d9b829397d4ab7b65073"}]},"merge_base_commit":{"sha":"13f50acf40a51076ea7960a3b44228a30b52d6e0","node_id":"C_kwDOHw6kqtoAKDEzZjUwYWNmNDBhNTEwNzZlYTc5NjBhM2I0NDIyOGEzMGI1MmQ2ZTA","commit":{"author":{"name":"maestrow","email":"andrew.shmelev@gmail.com","date":"2022-08-06T15:04:25Z"},"committer":{"name":"maestrow","email":"andrew.shmelev@gmail.com","date":"2022-08-06T15:04:25Z"},"message":"update workflow","tree":{"sha":"41fb108238498979b310d8f0fcc88f487bf5246c","url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/git/trees/41fb108238498979b310d8f0fcc88f487bf5246c"},"url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/git/commits/13f50acf40a51076ea7960a3b44228a30b52d6e0","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/commits/13f50acf40a51076ea7960a3b44228a30b52d6e0","html_url":"https://github.com/digital-boss/n8n-nodes-designpatterns-tutorial/commit/13f50acf40a51076ea7960a3b44228a30b52d6e0","comments_url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/commits/13f50acf40a51076ea7960a3b44228a30b52d6e0/comments","author":{"login":"maestrow","id":671853,"node_id":"MDQ6VXNlcjY3MTg1Mw==","avatar_url":"https://avatars.githubusercontent.com/u/671853?v=4","gravatar_id":"","url":"https://api.github.com/users/maestrow","html_url":"https://github.com/maestrow","followers_url":"https://api.github.com/users/maestrow/followers","following_url":"https://api.github.com/users/maestrow/following{/other_user}","gists_url":"https://api.github.com/users/maestrow/gists{/gist_id}","starred_url":"https://api.github.com/users/maestrow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/maestrow/subscriptions","organizations_url":"https://api.github.com/users/maestrow/orgs","repos_url":"https://api.github.com/users/maestrow/repos","events_url":"https://api.github.com/users/maestrow/events{/privacy}","received_events_url":"https://api.github.com/users/maestrow/received_events","type":"User","site_admin":false},"committer":{"login":"maestrow","id":671853,"node_id":"MDQ6VXNlcjY3MTg1Mw==","avatar_url":"https://avatars.githubusercontent.com/u/671853?v=4","gravatar_id":"","url":"https://api.github.com/users/maestrow","html_url":"https://github.com/maestrow","followers_url":"https://api.github.com/users/maestrow/followers","following_url":"https://api.github.com/users/maestrow/following{/other_user}","gists_url":"https://api.github.com/users/maestrow/gists{/gist_id}","starred_url":"https://api.github.com/users/maestrow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/maestrow/subscriptions","organizations_url":"https://api.github.com/users/maestrow/orgs","repos_url":"https://api.github.com/users/maestrow/repos","events_url":"https://api.github.com/users/maestrow/events{/privacy}","received_events_url":"https://api.github.com/users/maestrow/received_events","type":"User","site_admin":false},"parents":[{"sha":"a4e2db6b86e685506bf0d9b829397d4ab7b65073","url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/commits/a4e2db6b86e685506bf0d9b829397d4ab7b65073","html_url":"https://github.com/digital-boss/n8n-nodes-designpatterns-tutorial/commit/a4e2db6b86e685506bf0d9b829397d4ab7b65073"}]},"status":"ahead","ahead_by":2,"behind_by":0,"total_commits":2,"commits":[{"sha":"e6129e2951d0dc565b3f585123c650fd56728f70","node_id":"C_kwDOHw6kqtoAKGU2MTI5ZTI5NTFkMGRjNTY1YjNmNTg1MTIzYzY1MGZkNTY3MjhmNzA","commit":{"author":{"name":"maestrow","email":"andrew.shmelev@gmail.com","date":"2022-08-03T21:44:51Z"},"committer":{"name":"maestrow","email":"andrew.shmelev@gmail.com","date":"2022-08-03T21:44:51Z"},"message":"Extract input items iteration","tree":{"sha":"cf700c2ce21893bbc6aa695cb27574c6d03838c8","url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/git/trees/cf700c2ce21893bbc6aa695cb27574c6d03838c8"},"url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/git/commits/e6129e2951d0dc565b3f585123c650fd56728f70","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/commits/e6129e2951d0dc565b3f585123c650fd56728f70","html_url":"https://github.com/digital-boss/n8n-nodes-designpatterns-tutorial/commit/e6129e2951d0dc565b3f585123c650fd56728f70","comments_url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/commits/e6129e2951d0dc565b3f585123c650fd56728f70/comments","author":{"login":"maestrow","id":671853,"node_id":"MDQ6VXNlcjY3MTg1Mw==","avatar_url":"https://avatars.githubusercontent.com/u/671853?v=4","gravatar_id":"","url":"https://api.github.com/users/maestrow","html_url":"https://github.com/maestrow","followers_url":"https://api.github.com/users/maestrow/followers","following_url":"https://api.github.com/users/maestrow/following{/other_user}","gists_url":"https://api.github.com/users/maestrow/gists{/gist_id}","starred_url":"https://api.github.com/users/maestrow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/maestrow/subscriptions","organizations_url":"https://api.github.com/users/maestrow/orgs","repos_url":"https://api.github.com/users/maestrow/repos","events_url":"https://api.github.com/users/maestrow/events{/privacy}","received_events_url":"https://api.github.com/users/maestrow/received_events","type":"User","site_admin":false},"committer":{"login":"maestrow","id":671853,"node_id":"MDQ6VXNlcjY3MTg1Mw==","avatar_url":"https://avatars.githubusercontent.com/u/671853?v=4","gravatar_id":"","url":"https://api.github.com/users/maestrow","html_url":"https://github.com/maestrow","followers_url":"https://api.github.com/users/maestrow/followers","following_url":"https://api.github.com/users/maestrow/following{/other_user}","gists_url":"https://api.github.com/users/maestrow/gists{/gist_id}","starred_url":"https://api.github.com/users/maestrow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/maestrow/subscriptions","organizations_url":"https://api.github.com/users/maestrow/orgs","repos_url":"https://api.github.com/users/maestrow/repos","events_url":"https://api.github.com/users/maestrow/events{/privacy}","received_events_url":"https://api.github.com/users/maestrow/received_events","type":"User","site_admin":false},"parents":[{"sha":"a4e2db6b86e685506bf0d9b829397d4ab7b65073","url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/commits/a4e2db6b86e685506bf0d9b829397d4ab7b65073","html_url":"https://github.com/digital-boss/n8n-nodes-designpatterns-tutorial/commit/a4e2db6b86e685506bf0d9b829397d4ab7b65073"}]},{"sha":"61b65ab15e4bfaeb3013e3375011844572ec2d59","node_id":"C_kwDOHw6kqtoAKDYxYjY1YWIxNWU0YmZhZWIzMDEzZTMzNzUwMTE4NDQ1NzJlYzJkNTk","commit":{"author":{"name":"maestrow","email":"andrew.shmelev@gmail.com","date":"2022-08-06T15:05:31Z"},"committer":{"name":"maestrow","email":"andrew.shmelev@gmail.com","date":"2022-08-06T15:05:31Z"},"message":"Merge branch 'step3-2' into step4-1","tree":{"sha":"ab71699d7cce7125d529411f6ec79b194812c48f","url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/git/trees/ab71699d7cce7125d529411f6ec79b194812c48f"},"url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/git/commits/61b65ab15e4bfaeb3013e3375011844572ec2d59","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/commits/61b65ab15e4bfaeb3013e3375011844572ec2d59","html_url":"https://github.com/digital-boss/n8n-nodes-designpatterns-tutorial/commit/61b65ab15e4bfaeb3013e3375011844572ec2d59","comments_url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/commits/61b65ab15e4bfaeb3013e3375011844572ec2d59/comments","author":{"login":"maestrow","id":671853,"node_id":"MDQ6VXNlcjY3MTg1Mw==","avatar_url":"https://avatars.githubusercontent.com/u/671853?v=4","gravatar_id":"","url":"https://api.github.com/users/maestrow","html_url":"https://github.com/maestrow","followers_url":"https://api.github.com/users/maestrow/followers","following_url":"https://api.github.com/users/maestrow/following{/other_user}","gists_url":"https://api.github.com/users/maestrow/gists{/gist_id}","starred_url":"https://api.github.com/users/maestrow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/maestrow/subscriptions","organizations_url":"https://api.github.com/users/maestrow/orgs","repos_url":"https://api.github.com/users/maestrow/repos","events_url":"https://api.github.com/users/maestrow/events{/privacy}","received_events_url":"https://api.github.com/users/maestrow/received_events","type":"User","site_admin":false},"committer":{"login":"maestrow","id":671853,"node_id":"MDQ6VXNlcjY3MTg1Mw==","avatar_url":"https://avatars.githubusercontent.com/u/671853?v=4","gravatar_id":"","url":"https://api.github.com/users/maestrow","html_url":"https://github.com/maestrow","followers_url":"https://api.github.com/users/maestrow/followers","following_url":"https://api.github.com/users/maestrow/following{/other_user}","gists_url":"https://api.github.com/users/maestrow/gists{/gist_id}","starred_url":"https://api.github.com/users/maestrow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/maestrow/subscriptions","organizations_url":"https://api.github.com/users/maestrow/orgs","repos_url":"https://api.github.com/users/maestrow/repos","events_url":"https://api.github.com/users/maestrow/events{/privacy}","received_events_url":"https://api.github.com/users/maestrow/received_events","type":"User","site_admin":false},"parents":[{"sha":"e6129e2951d0dc565b3f585123c650fd56728f70","url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/commits/e6129e2951d0dc565b3f585123c650fd56728f70","html_url":"https://github.com/digital-boss/n8n-nodes-designpatterns-tutorial/commit/e6129e2951d0dc565b3f585123c650fd56728f70"},{"sha":"13f50acf40a51076ea7960a3b44228a30b52d6e0","url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/commits/13f50acf40a51076ea7960a3b44228a30b52d6e0","html_url":"https://github.com/digital-boss/n8n-nodes-designpatterns-tutorial/commit/13f50acf40a51076ea7960a3b44228a30b52d6e0"}]}],"files":[{"sha":"00a54914a550114f0ae290b248360285cc41a0bb","filename":"nodes/FakeCrm/FakeCrm.node.ts","status":"modified","additions":91,"deletions":113,"changes":204,"blob_url":"https://github.com/digital-boss/n8n-nodes-designpatterns-tutorial/blob/61b65ab15e4bfaeb3013e3375011844572ec2d59/nodes%2FFakeCrm%2FFakeCrm.node.ts","raw_url":"https://github.com/digital-boss/n8n-nodes-designpatterns-tutorial/raw/61b65ab15e4bfaeb3013e3375011844572ec2d59/nodes%2FFakeCrm%2FFakeCrm.node.ts","contents_url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/contents/nodes%2FFakeCrm%2FFakeCrm.node.ts?ref=61b65ab15e4bfaeb3013e3375011844572ec2d59","patch":"@@ -61,123 +61,101 @@ export class FakeCrm implements INodeType {\n \t};\n \n \tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n+\t\tconst execItemFn = getItemExecutor(this)\n+\t\tconst nodeExec = getNodeExecFn(execItemFn);\n+\t\treturn nodeExec.call(this);\n+\t}\n \n-\t\t// Uncomment following lines to output app parameters with values as node execution result. Can be helpfull in debugging.\n-\t\t// const params0 = this.getNode().parameters;\n-\t\t// const paramsWithValues0 = Object.keys(params0).map(name => [name, this.getNodeParameter(name, 0)]);\n-\t\t// const res0 = Object.fromEntries(paramsWithValues0);\n-\t\t// return [this.helpers.returnJsonArray(res0)];\n-\n-\t\tconst items = this.getInputData();\n-\t\tconst length = items.length;\n-\t\tconst returnData: IDataObject[] = [];\n-\t\tconst resource = this.getNodeParameter('resource', 0) as typeof resourcesConst[number];\n-\t\tconst operation = this.getNodeParameter('operation', 0) as string;\n-\n-\t\tfor (let itemIndex = 0; itemIndex < length; itemIndex++) {\n-\t\t\ttry {\n-\t\t\t\tlet method: string = 'GET';\n-\t\t\t\tlet path: string = '/';\n-\t\t\t\tlet body: IDataObject = {};\n-\n-\t\t\t\tlet id: string = '';\n-\t\t\t\tlet postId: string = '';\n-\t\t\t\tlet tags: string[] = [];\n+}\n \n-\t\t\t\tswitch (resource) {\n-\t\t\t\t\tcase \"post\":\n-\t\t\t\t\t\tswitch (operation) {\n-\t\t\t\t\t\t\tcase \"create\":\n-\t\t\t\t\t\t\t\tmethod = 'POST';\n-\t\t\t\t\t\t\t\tpath = '/post';\n-\t\t\t\t\t\t\t\tconst tagsColl1 = this.getNodeParameter('tags', itemIndex) as IDataObject;\n-\t\t\t\t\t\t\t\ttags = getTags(tagsColl1);\n-\t\t\t\t\t\t\t\tbody = Object.assign({},\n-\t\t\t\t\t\t\t\t\tthis.getNodeParameter('additionalFields', itemIndex) as IDataObject,\n-\t\t\t\t\t\t\t\t\t{tags}\n-\t\t\t\t\t\t\t\t);\n-\t\t\t\t\t\t\t\tbreak;\n-\t\t\t\t\t\t\tcase \"update\":\n-\t\t\t\t\t\t\t\tmethod = 'PUT';\n-\t\t\t\t\t\t\t\tid = this.getNodeParameter('id', itemIndex) as string;\n-\t\t\t\t\t\t\t\tpath = `/post/${id}`;\n-\t\t\t\t\t\t\t\tconst tagsColl2 = this.getNodeParameter('tags', itemIndex) as IDataObject;\n-\t\t\t\t\t\t\t\ttags = getTags(tagsColl2);\n-\t\t\t\t\t\t\t\tbody = Object.assign({},\n-\t\t\t\t\t\t\t\t\tthis.getNodeParameter('additionalFields', itemIndex) as IDataObject,\n-\t\t\t\t\t\t\t\t\t{tags}\n-\t\t\t\t\t\t\t\t);\n-\t\t\t\t\t\t\t\tbreak;\n-\t\t\t\t\t\t\tcase \"get\":\n-\t\t\t\t\t\t\t\tmethod = 'GET';\n-\t\t\t\t\t\t\t\tid = this.getNodeParameter('id', itemIndex) as string;\n-\t\t\t\t\t\t\t\tpath = `/post/${id}`;\n-\t\t\t\t\t\t\t\tbreak;\n-\t\t\t\t\t\t\tcase \"getAll\":\n-\t\t\t\t\t\t\t\tmethod = 'GET';\n-\t\t\t\t\t\t\t\tpath = '/post';\n-\t\t\t\t\t\t\t\tbreak;\n-\t\t\t\t\t\t\tcase \"delete\":\n-\t\t\t\t\t\t\t\tmethod = 'DELETE';\n-\t\t\t\t\t\t\t\tid = this.getNodeParameter('id', itemIndex) as string;\n-\t\t\t\t\t\t\t\tpath = `/post/${id}`;\n-\t\t\t\t\t\t\t\tbreak;\n-\t\t\t\t\t\t}\n+const getItemExecutor = (execFns: IExecuteFunctions) => async (itemIndex: number): Promise<any> => {\n+\tconst resource = execFns.getNodeParameter('resource', 0) as typeof resourcesConst[number];\n+\tconst operation = execFns.getNodeParameter('operation', 0) as string;\n+\n+\tlet method: string = 'GET';\n+\tlet path: string = '/';\n+\tlet body: IDataObject = {};\n+\n+\tlet id: string = '';\n+\tlet postId: string = '';\n+\tlet tags: string[] = [];\n+\n+\tswitch (resource) {\n+\t\tcase \"post\":\n+\t\t\tswitch (operation) {\n+\t\t\t\tcase \"create\":\n+\t\t\t\t\tmethod = 'POST';\n+\t\t\t\t\tpath = '/post';\n+\t\t\t\t\tconst tagsColl1 = execFns.getNodeParameter('tags', itemIndex) as IDataObject;\n+\t\t\t\t\ttags = getTags(tagsColl1);\n+\t\t\t\t\tbody = Object.assign({},\n+\t\t\t\t\t\texecFns.getNodeParameter('additionalFields', itemIndex) as IDataObject,\n+\t\t\t\t\t\t{tags}\n+\t\t\t\t\t);\n \t\t\t\t\tbreak;\n-\n-\t\t\t\t\tcase \"comment\":\n-\t\t\t\t\t\tswitch (operation) {\n-\t\t\t\t\t\t\tcase \"create\":\n-\t\t\t\t\t\t\t\tmethod = 'POST';\n-\t\t\t\t\t\t\t\tpostId = this.getNodeParameter('postId', itemIndex) as string;\n-\t\t\t\t\t\t\t\tpath = `/post/${postId}/comment`;\n-\t\t\t\t\t\t\t\tbody = this.getNodeParameter('additionalFields', itemIndex) as IDataObject;\n-\t\t\t\t\t\t\t\tbreak;\n-\t\t\t\t\t\t\tcase \"update\":\n-\t\t\t\t\t\t\t\tmethod = 'PUT';\n-\t\t\t\t\t\t\t\tpostId = this.getNodeParameter('postId', itemIndex) as string;\n-\t\t\t\t\t\t\t\tid = this.getNodeParameter('id', itemIndex) as string;\n-\t\t\t\t\t\t\t\tpath = `/post/${postId}/comment/${id}`;\n-\t\t\t\t\t\t\t\tbody = this.getNodeParameter('additionalFields', itemIndex) as IDataObject;\n-\t\t\t\t\t\t\t\tbreak;\n-\t\t\t\t\t\t\tcase \"get\":\n-\t\t\t\t\t\t\t\tmethod = 'GET';\n-\t\t\t\t\t\t\t\tpostId = this.getNodeParameter('postId', itemIndex) as string;\n-\t\t\t\t\t\t\t\tid = this.getNodeParameter('id', itemIndex) as string;\n-\t\t\t\t\t\t\t\tpath = `/post/${postId}/comment/${id}`;\n-\t\t\t\t\t\t\t\tbreak;\n-\t\t\t\t\t\t\tcase \"getAll\":\n-\t\t\t\t\t\t\t\tmethod = 'GET';\n-\t\t\t\t\t\t\t\tpostId = this.getNodeParameter('postId', itemIndex) as string;\n-\t\t\t\t\t\t\t\tpath = `/post/${postId}/comment`;\n-\t\t\t\t\t\t\t\tbreak;\n-\t\t\t\t\t\t\tcase \"delete\":\n-\t\t\t\t\t\t\t\tmethod = 'DELETE';\n-\t\t\t\t\t\t\t\tpostId = this.getNodeParameter('postId', itemIndex) as string;\n-\t\t\t\t\t\t\t\tid = this.getNodeParameter('id', itemIndex) as string;\n-\t\t\t\t\t\t\t\tpath = `/post/${postId}/comment/${id}`;\n-\t\t\t\t\t\t\t\tbreak;\n-\t\t\t\t\t\t}\n+\t\t\t\tcase \"update\":\n+\t\t\t\t\tmethod = 'PUT';\n+\t\t\t\t\tid = execFns.getNodeParameter('id', itemIndex) as string;\n+\t\t\t\t\tpath = `/post/${id}`;\n+\t\t\t\t\tconst tagsColl2 = execFns.getNodeParameter('tags', itemIndex) as IDataObject;\n+\t\t\t\t\ttags = getTags(tagsColl2);\n+\t\t\t\t\tbody = Object.assign({},\n+\t\t\t\t\t\texecFns.getNodeParameter('additionalFields', itemIndex) as IDataObject,\n+\t\t\t\t\t\t{tags}\n+\t\t\t\t\t);\n+\t\t\t\t\tbreak;\n+\t\t\t\tcase \"get\":\n+\t\t\t\t\tmethod = 'GET';\n+\t\t\t\t\tid = execFns.getNodeParameter('id', itemIndex) as string;\n+\t\t\t\t\tpath = `/post/${id}`;\n+\t\t\t\t\tbreak;\n+\t\t\t\tcase \"getAll\":\n+\t\t\t\t\tmethod = 'GET';\n+\t\t\t\t\tpath = '/post';\n+\t\t\t\t\tbreak;\n+\t\t\t\tcase \"delete\":\n+\t\t\t\t\tmethod = 'DELETE';\n+\t\t\t\t\tid = execFns.getNodeParameter('id', itemIndex) as string;\n+\t\t\t\t\tpath = `/post/${id}`;\n \t\t\t\t\tbreak;\n-\t\t\t\t}\n-\n-\t\t\t\tconst result = await fakeCrmRequest.call(this, method, path, body) || {};\n-\n-\t\t\t\tif (result.constructor === Array) {\n-\t\t\t\t\treturnData.push.apply(returnData, result);\n-\t\t\t\t} else {\n-\t\t\t\t\treturnData.push(result);\n-\t\t\t\t}\n-\t\t\t} catch (error) {\n-\t\t\t\tif (this.continueOnFail()) {\n-\t\t\t\t\treturnData.push({ error: error.message });\n-\t\t\t\t\tcontinue;\n-\t\t\t\t}\n-\t\t\t\tthrow error;\n \t\t\t}\n-\t\t}\n-\n-\t\treturn [this.helpers.returnJsonArray(returnData)];\n+\t\tbreak;\n+\n+\t\tcase \"comment\":\n+\t\t\tswitch (operation) {\n+\t\t\t\tcase \"create\":\n+\t\t\t\t\tmethod = 'POST';\n+\t\t\t\t\tpostId = execFns.getNodeParameter('postId', itemIndex) as string;\n+\t\t\t\t\tpath = `/post/${postId}/comment`;\n+\t\t\t\t\tbody = execFns.getNodeParameter('additionalFields', itemIndex) as IDataObject;\n+\t\t\t\t\tbreak;\n+\t\t\t\tcase \"update\":\n+\t\t\t\t\tmethod = 'PUT';\n+\t\t\t\t\tpostId = execFns.getNodeParameter('postId', itemIndex) as string;\n+\t\t\t\t\tid = execFns.getNodeParameter('id', itemIndex) as string;\n+\t\t\t\t\tpath = `/post/${postId}/comment/${id}`;\n+\t\t\t\t\tbody = execFns.getNodeParameter('additionalFields', itemIndex) as IDataObject;\n+\t\t\t\t\tbreak;\n+\t\t\t\tcase \"get\":\n+\t\t\t\t\tmethod = 'GET';\n+\t\t\t\t\tpostId = execFns.getNodeParameter('postId', itemIndex) as string;\n+\t\t\t\t\tid = execFns.getNodeParameter('id', itemIndex) as string;\n+\t\t\t\t\tpath = `/post/${postId}/comment/${id}`;\n+\t\t\t\t\tbreak;\n+\t\t\t\tcase \"getAll\":\n+\t\t\t\t\tmethod = 'GET';\n+\t\t\t\t\tpostId = execFns.getNodeParameter('postId', itemIndex) as string;\n+\t\t\t\t\tpath = `/post/${postId}/comment`;\n+\t\t\t\t\tbreak;\n+\t\t\t\tcase \"delete\":\n+\t\t\t\t\tmethod = 'DELETE';\n+\t\t\t\t\tpostId = execFns.getNodeParameter('postId', itemIndex) as string;\n+\t\t\t\t\tid = execFns.getNodeParameter('id', itemIndex) as string;\n+\t\t\t\t\tpath = `/post/${postId}/comment/${id}`;\n+\t\t\t\t\tbreak;\n+\t\t\t}\n+\t\tbreak;\n \t}\n-}\n \n+\treturn await fakeCrmRequest.call(execFns, method, path, body) || {};\n+}"},{"sha":"f4afaca3d92ebea445a7af3dfe0beb5968134c6a","filename":"nodes/FakeCrm/backend/getNodeExecFn.ts","status":"added","additions":25,"deletions":0,"changes":25,"blob_url":"https://github.com/digital-boss/n8n-nodes-designpatterns-tutorial/blob/61b65ab15e4bfaeb3013e3375011844572ec2d59/nodes%2FFakeCrm%2Fbackend%2FgetNodeExecFn.ts","raw_url":"https://github.com/digital-boss/n8n-nodes-designpatterns-tutorial/raw/61b65ab15e4bfaeb3013e3375011844572ec2d59/nodes%2FFakeCrm%2Fbackend%2FgetNodeExecFn.ts","contents_url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/contents/nodes%2FFakeCrm%2Fbackend%2FgetNodeExecFn.ts?ref=61b65ab15e4bfaeb3013e3375011844572ec2d59","patch":"@@ -0,0 +1,25 @@\n+import { IDataObject, IExecuteFunctions, INodeExecutionData } from 'n8n-workflow';\n+\n+export const getNodeExecFn = (execItem: (itemIndex: number) => Promise<any>) => async function (this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n+\tconst items = this.getInputData();\n+\tconst length = items.length;\n+\tconst returnData: IDataObject[] = [];\n+\n+\tfor (let itemIndex = 0; itemIndex < length; itemIndex++) {\n+\t\ttry {\n+\t\t\tconst result = await execItem(itemIndex);\n+\t\t\tif (result.constructor === Array) {\n+\t\t\t\treturnData.push.apply(returnData, result);\n+\t\t\t} else {\n+\t\t\t\treturnData.push(result);\n+\t\t\t}\n+\t\t} catch (error) {\n+\t\t\tif (this.continueOnFail()) {\n+\t\t\t\treturnData.push({ error: error.message });\n+\t\t\t\tcontinue;\n+\t\t\t}\n+\t\t\tthrow error;\n+\t\t}\n+\t}\n+\treturn [this.helpers.returnJsonArray(returnData)];\n+};"}]}