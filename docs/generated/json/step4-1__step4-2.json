{"url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/compare/step4-1...step4-2","html_url":"https://github.com/digital-boss/n8n-nodes-designpatterns-tutorial/compare/step4-1...step4-2","permalink_url":"https://github.com/digital-boss/n8n-nodes-designpatterns-tutorial/compare/digital-boss:61b65ab...digital-boss:2e58378","diff_url":"https://github.com/digital-boss/n8n-nodes-designpatterns-tutorial/compare/step4-1...step4-2.diff","patch_url":"https://github.com/digital-boss/n8n-nodes-designpatterns-tutorial/compare/step4-1...step4-2.patch","base_commit":{"sha":"61b65ab15e4bfaeb3013e3375011844572ec2d59","node_id":"C_kwDOHw6kqtoAKDYxYjY1YWIxNWU0YmZhZWIzMDEzZTMzNzUwMTE4NDQ1NzJlYzJkNTk","commit":{"author":{"name":"maestrow","email":"andrew.shmelev@gmail.com","date":"2022-08-06T15:05:31Z"},"committer":{"name":"maestrow","email":"andrew.shmelev@gmail.com","date":"2022-08-06T15:05:31Z"},"message":"Merge branch 'step3-2' into step4-1","tree":{"sha":"ab71699d7cce7125d529411f6ec79b194812c48f","url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/git/trees/ab71699d7cce7125d529411f6ec79b194812c48f"},"url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/git/commits/61b65ab15e4bfaeb3013e3375011844572ec2d59","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/commits/61b65ab15e4bfaeb3013e3375011844572ec2d59","html_url":"https://github.com/digital-boss/n8n-nodes-designpatterns-tutorial/commit/61b65ab15e4bfaeb3013e3375011844572ec2d59","comments_url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/commits/61b65ab15e4bfaeb3013e3375011844572ec2d59/comments","author":{"login":"maestrow","id":671853,"node_id":"MDQ6VXNlcjY3MTg1Mw==","avatar_url":"https://avatars.githubusercontent.com/u/671853?v=4","gravatar_id":"","url":"https://api.github.com/users/maestrow","html_url":"https://github.com/maestrow","followers_url":"https://api.github.com/users/maestrow/followers","following_url":"https://api.github.com/users/maestrow/following{/other_user}","gists_url":"https://api.github.com/users/maestrow/gists{/gist_id}","starred_url":"https://api.github.com/users/maestrow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/maestrow/subscriptions","organizations_url":"https://api.github.com/users/maestrow/orgs","repos_url":"https://api.github.com/users/maestrow/repos","events_url":"https://api.github.com/users/maestrow/events{/privacy}","received_events_url":"https://api.github.com/users/maestrow/received_events","type":"User","site_admin":false},"committer":{"login":"maestrow","id":671853,"node_id":"MDQ6VXNlcjY3MTg1Mw==","avatar_url":"https://avatars.githubusercontent.com/u/671853?v=4","gravatar_id":"","url":"https://api.github.com/users/maestrow","html_url":"https://github.com/maestrow","followers_url":"https://api.github.com/users/maestrow/followers","following_url":"https://api.github.com/users/maestrow/following{/other_user}","gists_url":"https://api.github.com/users/maestrow/gists{/gist_id}","starred_url":"https://api.github.com/users/maestrow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/maestrow/subscriptions","organizations_url":"https://api.github.com/users/maestrow/orgs","repos_url":"https://api.github.com/users/maestrow/repos","events_url":"https://api.github.com/users/maestrow/events{/privacy}","received_events_url":"https://api.github.com/users/maestrow/received_events","type":"User","site_admin":false},"parents":[{"sha":"e6129e2951d0dc565b3f585123c650fd56728f70","url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/commits/e6129e2951d0dc565b3f585123c650fd56728f70","html_url":"https://github.com/digital-boss/n8n-nodes-designpatterns-tutorial/commit/e6129e2951d0dc565b3f585123c650fd56728f70"},{"sha":"13f50acf40a51076ea7960a3b44228a30b52d6e0","url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/commits/13f50acf40a51076ea7960a3b44228a30b52d6e0","html_url":"https://github.com/digital-boss/n8n-nodes-designpatterns-tutorial/commit/13f50acf40a51076ea7960a3b44228a30b52d6e0"}]},"merge_base_commit":{"sha":"61b65ab15e4bfaeb3013e3375011844572ec2d59","node_id":"C_kwDOHw6kqtoAKDYxYjY1YWIxNWU0YmZhZWIzMDEzZTMzNzUwMTE4NDQ1NzJlYzJkNTk","commit":{"author":{"name":"maestrow","email":"andrew.shmelev@gmail.com","date":"2022-08-06T15:05:31Z"},"committer":{"name":"maestrow","email":"andrew.shmelev@gmail.com","date":"2022-08-06T15:05:31Z"},"message":"Merge branch 'step3-2' into step4-1","tree":{"sha":"ab71699d7cce7125d529411f6ec79b194812c48f","url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/git/trees/ab71699d7cce7125d529411f6ec79b194812c48f"},"url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/git/commits/61b65ab15e4bfaeb3013e3375011844572ec2d59","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/commits/61b65ab15e4bfaeb3013e3375011844572ec2d59","html_url":"https://github.com/digital-boss/n8n-nodes-designpatterns-tutorial/commit/61b65ab15e4bfaeb3013e3375011844572ec2d59","comments_url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/commits/61b65ab15e4bfaeb3013e3375011844572ec2d59/comments","author":{"login":"maestrow","id":671853,"node_id":"MDQ6VXNlcjY3MTg1Mw==","avatar_url":"https://avatars.githubusercontent.com/u/671853?v=4","gravatar_id":"","url":"https://api.github.com/users/maestrow","html_url":"https://github.com/maestrow","followers_url":"https://api.github.com/users/maestrow/followers","following_url":"https://api.github.com/users/maestrow/following{/other_user}","gists_url":"https://api.github.com/users/maestrow/gists{/gist_id}","starred_url":"https://api.github.com/users/maestrow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/maestrow/subscriptions","organizations_url":"https://api.github.com/users/maestrow/orgs","repos_url":"https://api.github.com/users/maestrow/repos","events_url":"https://api.github.com/users/maestrow/events{/privacy}","received_events_url":"https://api.github.com/users/maestrow/received_events","type":"User","site_admin":false},"committer":{"login":"maestrow","id":671853,"node_id":"MDQ6VXNlcjY3MTg1Mw==","avatar_url":"https://avatars.githubusercontent.com/u/671853?v=4","gravatar_id":"","url":"https://api.github.com/users/maestrow","html_url":"https://github.com/maestrow","followers_url":"https://api.github.com/users/maestrow/followers","following_url":"https://api.github.com/users/maestrow/following{/other_user}","gists_url":"https://api.github.com/users/maestrow/gists{/gist_id}","starred_url":"https://api.github.com/users/maestrow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/maestrow/subscriptions","organizations_url":"https://api.github.com/users/maestrow/orgs","repos_url":"https://api.github.com/users/maestrow/repos","events_url":"https://api.github.com/users/maestrow/events{/privacy}","received_events_url":"https://api.github.com/users/maestrow/received_events","type":"User","site_admin":false},"parents":[{"sha":"e6129e2951d0dc565b3f585123c650fd56728f70","url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/commits/e6129e2951d0dc565b3f585123c650fd56728f70","html_url":"https://github.com/digital-boss/n8n-nodes-designpatterns-tutorial/commit/e6129e2951d0dc565b3f585123c650fd56728f70"},{"sha":"13f50acf40a51076ea7960a3b44228a30b52d6e0","url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/commits/13f50acf40a51076ea7960a3b44228a30b52d6e0","html_url":"https://github.com/digital-boss/n8n-nodes-designpatterns-tutorial/commit/13f50acf40a51076ea7960a3b44228a30b52d6e0"}]},"status":"ahead","ahead_by":2,"behind_by":0,"total_commits":2,"commits":[{"sha":"9804de324e849c3529d3f2c71503382018b821c5","node_id":"C_kwDOHw6kqtoAKDk4MDRkZTMyNGU4NDljMzUyOWQzZjJjNzE1MDMzODIwMThiODIxYzU","commit":{"author":{"name":"maestrow","email":"andrew.shmelev@gmail.com","date":"2022-08-03T22:20:00Z"},"committer":{"name":"maestrow","email":"andrew.shmelev@gmail.com","date":"2022-08-03T22:20:00Z"},"message":"Extract operations","tree":{"sha":"0501eb24d3791ebb4396849d46f1382f3fdbd917","url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/git/trees/0501eb24d3791ebb4396849d46f1382f3fdbd917"},"url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/git/commits/9804de324e849c3529d3f2c71503382018b821c5","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/commits/9804de324e849c3529d3f2c71503382018b821c5","html_url":"https://github.com/digital-boss/n8n-nodes-designpatterns-tutorial/commit/9804de324e849c3529d3f2c71503382018b821c5","comments_url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/commits/9804de324e849c3529d3f2c71503382018b821c5/comments","author":{"login":"maestrow","id":671853,"node_id":"MDQ6VXNlcjY3MTg1Mw==","avatar_url":"https://avatars.githubusercontent.com/u/671853?v=4","gravatar_id":"","url":"https://api.github.com/users/maestrow","html_url":"https://github.com/maestrow","followers_url":"https://api.github.com/users/maestrow/followers","following_url":"https://api.github.com/users/maestrow/following{/other_user}","gists_url":"https://api.github.com/users/maestrow/gists{/gist_id}","starred_url":"https://api.github.com/users/maestrow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/maestrow/subscriptions","organizations_url":"https://api.github.com/users/maestrow/orgs","repos_url":"https://api.github.com/users/maestrow/repos","events_url":"https://api.github.com/users/maestrow/events{/privacy}","received_events_url":"https://api.github.com/users/maestrow/received_events","type":"User","site_admin":false},"committer":{"login":"maestrow","id":671853,"node_id":"MDQ6VXNlcjY3MTg1Mw==","avatar_url":"https://avatars.githubusercontent.com/u/671853?v=4","gravatar_id":"","url":"https://api.github.com/users/maestrow","html_url":"https://github.com/maestrow","followers_url":"https://api.github.com/users/maestrow/followers","following_url":"https://api.github.com/users/maestrow/following{/other_user}","gists_url":"https://api.github.com/users/maestrow/gists{/gist_id}","starred_url":"https://api.github.com/users/maestrow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/maestrow/subscriptions","organizations_url":"https://api.github.com/users/maestrow/orgs","repos_url":"https://api.github.com/users/maestrow/repos","events_url":"https://api.github.com/users/maestrow/events{/privacy}","received_events_url":"https://api.github.com/users/maestrow/received_events","type":"User","site_admin":false},"parents":[{"sha":"e6129e2951d0dc565b3f585123c650fd56728f70","url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/commits/e6129e2951d0dc565b3f585123c650fd56728f70","html_url":"https://github.com/digital-boss/n8n-nodes-designpatterns-tutorial/commit/e6129e2951d0dc565b3f585123c650fd56728f70"}]},{"sha":"2e583788c20a30a22166f1c5e36c530ccd7c09c9","node_id":"C_kwDOHw6kqtoAKDJlNTgzNzg4YzIwYTMwYTIyMTY2ZjFjNWUzNmM1MzBjY2Q3YzA5Yzk","commit":{"author":{"name":"maestrow","email":"andrew.shmelev@gmail.com","date":"2022-08-06T15:06:01Z"},"committer":{"name":"maestrow","email":"andrew.shmelev@gmail.com","date":"2022-08-06T15:06:01Z"},"message":"Merge branch 'step4-1' into step4-2","tree":{"sha":"6112057feea62935eb33000c97a8cc1cc80764f1","url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/git/trees/6112057feea62935eb33000c97a8cc1cc80764f1"},"url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/git/commits/2e583788c20a30a22166f1c5e36c530ccd7c09c9","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/commits/2e583788c20a30a22166f1c5e36c530ccd7c09c9","html_url":"https://github.com/digital-boss/n8n-nodes-designpatterns-tutorial/commit/2e583788c20a30a22166f1c5e36c530ccd7c09c9","comments_url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/commits/2e583788c20a30a22166f1c5e36c530ccd7c09c9/comments","author":{"login":"maestrow","id":671853,"node_id":"MDQ6VXNlcjY3MTg1Mw==","avatar_url":"https://avatars.githubusercontent.com/u/671853?v=4","gravatar_id":"","url":"https://api.github.com/users/maestrow","html_url":"https://github.com/maestrow","followers_url":"https://api.github.com/users/maestrow/followers","following_url":"https://api.github.com/users/maestrow/following{/other_user}","gists_url":"https://api.github.com/users/maestrow/gists{/gist_id}","starred_url":"https://api.github.com/users/maestrow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/maestrow/subscriptions","organizations_url":"https://api.github.com/users/maestrow/orgs","repos_url":"https://api.github.com/users/maestrow/repos","events_url":"https://api.github.com/users/maestrow/events{/privacy}","received_events_url":"https://api.github.com/users/maestrow/received_events","type":"User","site_admin":false},"committer":{"login":"maestrow","id":671853,"node_id":"MDQ6VXNlcjY3MTg1Mw==","avatar_url":"https://avatars.githubusercontent.com/u/671853?v=4","gravatar_id":"","url":"https://api.github.com/users/maestrow","html_url":"https://github.com/maestrow","followers_url":"https://api.github.com/users/maestrow/followers","following_url":"https://api.github.com/users/maestrow/following{/other_user}","gists_url":"https://api.github.com/users/maestrow/gists{/gist_id}","starred_url":"https://api.github.com/users/maestrow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/maestrow/subscriptions","organizations_url":"https://api.github.com/users/maestrow/orgs","repos_url":"https://api.github.com/users/maestrow/repos","events_url":"https://api.github.com/users/maestrow/events{/privacy}","received_events_url":"https://api.github.com/users/maestrow/received_events","type":"User","site_admin":false},"parents":[{"sha":"9804de324e849c3529d3f2c71503382018b821c5","url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/commits/9804de324e849c3529d3f2c71503382018b821c5","html_url":"https://github.com/digital-boss/n8n-nodes-designpatterns-tutorial/commit/9804de324e849c3529d3f2c71503382018b821c5"},{"sha":"61b65ab15e4bfaeb3013e3375011844572ec2d59","url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/commits/61b65ab15e4bfaeb3013e3375011844572ec2d59","html_url":"https://github.com/digital-boss/n8n-nodes-designpatterns-tutorial/commit/61b65ab15e4bfaeb3013e3375011844572ec2d59"}]}],"files":[{"sha":"df4998af753ad6c6318b0dd75f66f76bb0b53cc7","filename":"nodes/FakeCrm/FakeCrm.node.ts","status":"modified","additions":12,"deletions":85,"changes":97,"blob_url":"https://github.com/digital-boss/n8n-nodes-designpatterns-tutorial/blob/2e583788c20a30a22166f1c5e36c530ccd7c09c9/nodes%2FFakeCrm%2FFakeCrm.node.ts","raw_url":"https://github.com/digital-boss/n8n-nodes-designpatterns-tutorial/raw/2e583788c20a30a22166f1c5e36c530ccd7c09c9/nodes%2FFakeCrm%2FFakeCrm.node.ts","contents_url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/contents/nodes%2FFakeCrm%2FFakeCrm.node.ts?ref=2e583788c20a30a22166f1c5e36c530ccd7c09c9","patch":"@@ -7,6 +7,7 @@ import {\n \tINodeExecutionData,\n \tINodeType,\n \tINodeTypeDescription,\n+\tNodeOperationError,\n } from 'n8n-workflow';\n \n \n@@ -21,6 +22,7 @@ import { ResOpExecutor, ResOpResolver } from '@digital-boss/n8n-designpatterns/d\n import { ReturnParamsExecutor } from '@digital-boss/n8n-designpatterns/dist/usecases';\n import { getNodeExecFn, StateBase } from '@digital-boss/n8n-designpatterns/dist';\n import { fakeCrmRequest } from './GenericFunctions';\n+import { operationMethods } from './backend/operations';\n \n const getTags = (param: IDataObject): string[] => {\n \treturn (param.tagProps as string[] || []).map((i: any) => i.tag)\n@@ -69,93 +71,18 @@ export class FakeCrm implements INodeType {\n }\n \n const getItemExecutor = (execFns: IExecuteFunctions) => async (itemIndex: number): Promise<any> => {\n-\tconst resource = execFns.getNodeParameter('resource', 0) as typeof resourcesConst[number];\n-\tconst operation = execFns.getNodeParameter('operation', 0) as string;\n+\tconst resourceName = execFns.getNodeParameter('resource', 0) as typeof resourcesConst[number];\n+\tconst operationName = execFns.getNodeParameter('operation', 0) as string;\n \n-\tlet method: string = 'GET';\n-\tlet path: string = '/';\n-\tlet body: IDataObject = {};\n-\n-\tlet id: string = '';\n-\tlet postId: string = '';\n-\tlet tags: string[] = [];\n-\n-\tswitch (resource) {\n-\t\tcase \"post\":\n-\t\t\tswitch (operation) {\n-\t\t\t\tcase \"create\":\n-\t\t\t\t\tmethod = 'POST';\n-\t\t\t\t\tpath = '/post';\n-\t\t\t\t\tconst tagsColl1 = execFns.getNodeParameter('tags', itemIndex) as IDataObject;\n-\t\t\t\t\ttags = getTags(tagsColl1);\n-\t\t\t\t\tbody = Object.assign({},\n-\t\t\t\t\t\texecFns.getNodeParameter('additionalFields', itemIndex) as IDataObject,\n-\t\t\t\t\t\t{tags}\n-\t\t\t\t\t);\n-\t\t\t\t\tbreak;\n-\t\t\t\tcase \"update\":\n-\t\t\t\t\tmethod = 'PUT';\n-\t\t\t\t\tid = execFns.getNodeParameter('id', itemIndex) as string;\n-\t\t\t\t\tpath = `/post/${id}`;\n-\t\t\t\t\tconst tagsColl2 = execFns.getNodeParameter('tags', itemIndex) as IDataObject;\n-\t\t\t\t\ttags = getTags(tagsColl2);\n-\t\t\t\t\tbody = Object.assign({},\n-\t\t\t\t\t\texecFns.getNodeParameter('additionalFields', itemIndex) as IDataObject,\n-\t\t\t\t\t\t{tags}\n-\t\t\t\t\t);\n-\t\t\t\t\tbreak;\n-\t\t\t\tcase \"get\":\n-\t\t\t\t\tmethod = 'GET';\n-\t\t\t\t\tid = execFns.getNodeParameter('id', itemIndex) as string;\n-\t\t\t\t\tpath = `/post/${id}`;\n-\t\t\t\t\tbreak;\n-\t\t\t\tcase \"getAll\":\n-\t\t\t\t\tmethod = 'GET';\n-\t\t\t\t\tpath = '/post';\n-\t\t\t\t\tbreak;\n-\t\t\t\tcase \"delete\":\n-\t\t\t\t\tmethod = 'DELETE';\n-\t\t\t\t\tid = execFns.getNodeParameter('id', itemIndex) as string;\n-\t\t\t\t\tpath = `/post/${id}`;\n-\t\t\t\t\tbreak;\n-\t\t\t}\n-\t\tbreak;\n+\tconst resource = operationMethods[resourceName];\n+\tif (!resource) {\n+\t\tthrow new NodeOperationError(execFns.getNode(), `Resource not found: ${resourceName}`);\n+\t}\n \n-\t\tcase \"comment\":\n-\t\t\tswitch (operation) {\n-\t\t\t\tcase \"create\":\n-\t\t\t\t\tmethod = 'POST';\n-\t\t\t\t\tpostId = execFns.getNodeParameter('postId', itemIndex) as string;\n-\t\t\t\t\tpath = `/post/${postId}/comment`;\n-\t\t\t\t\tbody = execFns.getNodeParameter('additionalFields', itemIndex) as IDataObject;\n-\t\t\t\t\tbreak;\n-\t\t\t\tcase \"update\":\n-\t\t\t\t\tmethod = 'PUT';\n-\t\t\t\t\tpostId = execFns.getNodeParameter('postId', itemIndex) as string;\n-\t\t\t\t\tid = execFns.getNodeParameter('id', itemIndex) as string;\n-\t\t\t\t\tpath = `/post/${postId}/comment/${id}`;\n-\t\t\t\t\tbody = execFns.getNodeParameter('additionalFields', itemIndex) as IDataObject;\n-\t\t\t\t\tbreak;\n-\t\t\t\tcase \"get\":\n-\t\t\t\t\tmethod = 'GET';\n-\t\t\t\t\tpostId = execFns.getNodeParameter('postId', itemIndex) as string;\n-\t\t\t\t\tid = execFns.getNodeParameter('id', itemIndex) as string;\n-\t\t\t\t\tpath = `/post/${postId}/comment/${id}`;\n-\t\t\t\t\tbreak;\n-\t\t\t\tcase \"getAll\":\n-\t\t\t\t\tmethod = 'GET';\n-\t\t\t\t\tpostId = execFns.getNodeParameter('postId', itemIndex) as string;\n-\t\t\t\t\tpath = `/post/${postId}/comment`;\n-\t\t\t\t\tbreak;\n-\t\t\t\tcase \"delete\":\n-\t\t\t\t\tmethod = 'DELETE';\n-\t\t\t\t\tpostId = execFns.getNodeParameter('postId', itemIndex) as string;\n-\t\t\t\t\tid = execFns.getNodeParameter('id', itemIndex) as string;\n-\t\t\t\t\tpath = `/post/${postId}/comment/${id}`;\n-\t\t\t\t\tbreak;\n-\t\t\t}\n-\t\tbreak;\n+\tconst operation = resource[operationName];\n+\tif (!operation) {\n+\t\tthrow new NodeOperationError(execFns.getNode(), `Operation not found: ${operationName}`);\n \t}\n \n-\treturn await fakeCrmRequest.call(execFns, method, path, body) || {};\n+\treturn operation(execFns, itemIndex);\n }"},{"sha":"60a118c7fa30a832c34d73402709edc6ca09791e","filename":"nodes/FakeCrm/backend/operations.ts","status":"added","additions":109,"deletions":0,"changes":109,"blob_url":"https://github.com/digital-boss/n8n-nodes-designpatterns-tutorial/blob/2e583788c20a30a22166f1c5e36c530ccd7c09c9/nodes%2FFakeCrm%2Fbackend%2Foperations.ts","raw_url":"https://github.com/digital-boss/n8n-nodes-designpatterns-tutorial/raw/2e583788c20a30a22166f1c5e36c530ccd7c09c9/nodes%2FFakeCrm%2Fbackend%2Foperations.ts","contents_url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/contents/nodes%2FFakeCrm%2Fbackend%2Foperations.ts?ref=2e583788c20a30a22166f1c5e36c530ccd7c09c9","patch":"@@ -0,0 +1,109 @@\n+import {\n+\tIExecuteFunctions,\n+} from 'n8n-core';\n+\n+import { IDataObject } from \"n8n-workflow\";\n+import { fakeCrmRequest } from '../GenericFunctions';\n+\n+type OpFn = (execFns: IExecuteFunctions, itemIndex: number) => Promise<any>;\n+type OpContainer = Record<string, OpFn>\n+\n+const getTags = (param: IDataObject): string[] => {\n+\treturn (param.tagProps as string[] || []).map((i: any) => i.tag)\n+}\n+\n+const post: OpContainer = {\n+\n+\tcreate: (execFns, itemIndex) => {\n+\t\tconst method = 'POST';\n+\t\tconst path = '/post';\n+\t\tconst tagsColl1 = execFns.getNodeParameter('tags', itemIndex) as IDataObject;\n+\t\tconst tags = getTags(tagsColl1);\n+\t\tconst body = Object.assign({},\n+\t\t\texecFns.getNodeParameter('additionalFields', itemIndex) as IDataObject,\n+\t\t\t{tags}\n+\t\t);\n+\t\treturn fakeCrmRequest.call(execFns, method, path, body)\n+\t},\n+\n+\tupdate: (execFns, itemIndex) => {\n+\t\tconst method = 'PUT';\n+\t\tconst id = execFns.getNodeParameter('id', itemIndex) as string;\n+\t\tconst path = `/post/${id}`;\n+\t\tconst tagsColl2 = execFns.getNodeParameter('tags', itemIndex) as IDataObject;\n+\t\tconst tags = getTags(tagsColl2);\n+\t\tconst body = Object.assign({},\n+\t\t\texecFns.getNodeParameter('additionalFields', itemIndex) as IDataObject,\n+\t\t\t{tags}\n+\t\t);\n+\t\treturn fakeCrmRequest.call(execFns, method, path, body).then(res => res || {});\n+\t},\n+\n+\tget: (execFns, itemIndex) => {\n+\t\tconst method = 'GET';\n+\t\tconst id = execFns.getNodeParameter('id', itemIndex) as string;\n+\t\tconst path = `/post/${id}`;\n+\t\treturn fakeCrmRequest.call(execFns, method, path)\n+\t},\n+\n+\tgetAll: (execFns, itemIndex) => {\n+\t\tconst method = 'GET';\n+\t\tconst path = '/post';\n+\t\treturn fakeCrmRequest.call(execFns, method, path)\n+\t},\n+\n+\tdelete: (execFns, itemIndex) => {\n+\t\tconst method = 'DELETE';\n+\t\tconst id = execFns.getNodeParameter('id', itemIndex) as string;\n+\t\tconst path = `/post/${id}`;\n+\t\treturn fakeCrmRequest.call(execFns, method, path)\n+\t}\n+}\n+\n+const comment: OpContainer = {\n+\n+\tcreate: (execFns, itemIndex) => {\n+\t\tconst method = 'POST';\n+\t\tconst postId = execFns.getNodeParameter('postId', itemIndex) as string;\n+\t\tconst path = `/post/${postId}/comment`;\n+\t\tconst body = execFns.getNodeParameter('additionalFields', itemIndex) as IDataObject;\n+\t\treturn fakeCrmRequest.call(execFns, method, path, body)\n+\t},\n+\n+\tupdate: (execFns, itemIndex) => {\n+\t\tconst method = 'PUT';\n+\t\tconst postId = execFns.getNodeParameter('postId', itemIndex) as string;\n+\t\tconst id = execFns.getNodeParameter('id', itemIndex) as string;\n+\t\tconst path = `/post/${postId}/comment/${id}`;\n+\t\tconst body = execFns.getNodeParameter('additionalFields', itemIndex) as IDataObject;\n+\t\treturn fakeCrmRequest.call(execFns, method, path, body).then(res => res || {});\n+\t},\n+\n+\tget: (execFns, itemIndex) => {\n+\t\tconst method = 'GET';\n+\t\tconst postId = execFns.getNodeParameter('postId', itemIndex) as string;\n+\t\tconst id = execFns.getNodeParameter('id', itemIndex) as string;\n+\t\tconst path = `/post/${postId}/comment/${id}`;\n+\t\treturn fakeCrmRequest.call(execFns, method, path)\n+\t},\n+\n+\tgetAll:(execFns, itemIndex) => {\n+\t\tconst method = 'GET';\n+\t\tconst postId = execFns.getNodeParameter('postId', itemIndex) as string;\n+\t\tconst path = `/post/${postId}/comment`;\n+\t\treturn fakeCrmRequest.call(execFns, method, path)\n+\t},\n+\n+\tdelete: (execFns, itemIndex) => {\n+\t\tconst method = 'DELETE';\n+\t\tconst postId = execFns.getNodeParameter('postId', itemIndex) as string;\n+\t\tconst id = execFns.getNodeParameter('id', itemIndex) as string;\n+\t\tconst path = `/post/${postId}/comment/${id}`;\n+\t\treturn fakeCrmRequest.call(execFns, method, path)\n+\t}\n+}\n+\n+export const operationMethods = {\n+\tpost,\n+\tcomment\n+}"}]}