{"url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/compare/step4-2...step4-3-1","html_url":"https://github.com/digital-boss/n8n-nodes-designpatterns-tutorial/compare/step4-2...step4-3-1","permalink_url":"https://github.com/digital-boss/n8n-nodes-designpatterns-tutorial/compare/digital-boss:2e58378...digital-boss:2eca392","diff_url":"https://github.com/digital-boss/n8n-nodes-designpatterns-tutorial/compare/step4-2...step4-3-1.diff","patch_url":"https://github.com/digital-boss/n8n-nodes-designpatterns-tutorial/compare/step4-2...step4-3-1.patch","base_commit":{"sha":"2e583788c20a30a22166f1c5e36c530ccd7c09c9","node_id":"C_kwDOHw6kqtoAKDJlNTgzNzg4YzIwYTMwYTIyMTY2ZjFjNWUzNmM1MzBjY2Q3YzA5Yzk","commit":{"author":{"name":"maestrow","email":"andrew.shmelev@gmail.com","date":"2022-08-06T15:06:01Z"},"committer":{"name":"maestrow","email":"andrew.shmelev@gmail.com","date":"2022-08-06T15:06:01Z"},"message":"Merge branch 'step4-1' into step4-2","tree":{"sha":"6112057feea62935eb33000c97a8cc1cc80764f1","url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/git/trees/6112057feea62935eb33000c97a8cc1cc80764f1"},"url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/git/commits/2e583788c20a30a22166f1c5e36c530ccd7c09c9","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/commits/2e583788c20a30a22166f1c5e36c530ccd7c09c9","html_url":"https://github.com/digital-boss/n8n-nodes-designpatterns-tutorial/commit/2e583788c20a30a22166f1c5e36c530ccd7c09c9","comments_url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/commits/2e583788c20a30a22166f1c5e36c530ccd7c09c9/comments","author":{"login":"maestrow","id":671853,"node_id":"MDQ6VXNlcjY3MTg1Mw==","avatar_url":"https://avatars.githubusercontent.com/u/671853?v=4","gravatar_id":"","url":"https://api.github.com/users/maestrow","html_url":"https://github.com/maestrow","followers_url":"https://api.github.com/users/maestrow/followers","following_url":"https://api.github.com/users/maestrow/following{/other_user}","gists_url":"https://api.github.com/users/maestrow/gists{/gist_id}","starred_url":"https://api.github.com/users/maestrow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/maestrow/subscriptions","organizations_url":"https://api.github.com/users/maestrow/orgs","repos_url":"https://api.github.com/users/maestrow/repos","events_url":"https://api.github.com/users/maestrow/events{/privacy}","received_events_url":"https://api.github.com/users/maestrow/received_events","type":"User","site_admin":false},"committer":{"login":"maestrow","id":671853,"node_id":"MDQ6VXNlcjY3MTg1Mw==","avatar_url":"https://avatars.githubusercontent.com/u/671853?v=4","gravatar_id":"","url":"https://api.github.com/users/maestrow","html_url":"https://github.com/maestrow","followers_url":"https://api.github.com/users/maestrow/followers","following_url":"https://api.github.com/users/maestrow/following{/other_user}","gists_url":"https://api.github.com/users/maestrow/gists{/gist_id}","starred_url":"https://api.github.com/users/maestrow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/maestrow/subscriptions","organizations_url":"https://api.github.com/users/maestrow/orgs","repos_url":"https://api.github.com/users/maestrow/repos","events_url":"https://api.github.com/users/maestrow/events{/privacy}","received_events_url":"https://api.github.com/users/maestrow/received_events","type":"User","site_admin":false},"parents":[{"sha":"9804de324e849c3529d3f2c71503382018b821c5","url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/commits/9804de324e849c3529d3f2c71503382018b821c5","html_url":"https://github.com/digital-boss/n8n-nodes-designpatterns-tutorial/commit/9804de324e849c3529d3f2c71503382018b821c5"},{"sha":"61b65ab15e4bfaeb3013e3375011844572ec2d59","url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/commits/61b65ab15e4bfaeb3013e3375011844572ec2d59","html_url":"https://github.com/digital-boss/n8n-nodes-designpatterns-tutorial/commit/61b65ab15e4bfaeb3013e3375011844572ec2d59"}]},"merge_base_commit":{"sha":"2e583788c20a30a22166f1c5e36c530ccd7c09c9","node_id":"C_kwDOHw6kqtoAKDJlNTgzNzg4YzIwYTMwYTIyMTY2ZjFjNWUzNmM1MzBjY2Q3YzA5Yzk","commit":{"author":{"name":"maestrow","email":"andrew.shmelev@gmail.com","date":"2022-08-06T15:06:01Z"},"committer":{"name":"maestrow","email":"andrew.shmelev@gmail.com","date":"2022-08-06T15:06:01Z"},"message":"Merge branch 'step4-1' into step4-2","tree":{"sha":"6112057feea62935eb33000c97a8cc1cc80764f1","url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/git/trees/6112057feea62935eb33000c97a8cc1cc80764f1"},"url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/git/commits/2e583788c20a30a22166f1c5e36c530ccd7c09c9","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/commits/2e583788c20a30a22166f1c5e36c530ccd7c09c9","html_url":"https://github.com/digital-boss/n8n-nodes-designpatterns-tutorial/commit/2e583788c20a30a22166f1c5e36c530ccd7c09c9","comments_url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/commits/2e583788c20a30a22166f1c5e36c530ccd7c09c9/comments","author":{"login":"maestrow","id":671853,"node_id":"MDQ6VXNlcjY3MTg1Mw==","avatar_url":"https://avatars.githubusercontent.com/u/671853?v=4","gravatar_id":"","url":"https://api.github.com/users/maestrow","html_url":"https://github.com/maestrow","followers_url":"https://api.github.com/users/maestrow/followers","following_url":"https://api.github.com/users/maestrow/following{/other_user}","gists_url":"https://api.github.com/users/maestrow/gists{/gist_id}","starred_url":"https://api.github.com/users/maestrow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/maestrow/subscriptions","organizations_url":"https://api.github.com/users/maestrow/orgs","repos_url":"https://api.github.com/users/maestrow/repos","events_url":"https://api.github.com/users/maestrow/events{/privacy}","received_events_url":"https://api.github.com/users/maestrow/received_events","type":"User","site_admin":false},"committer":{"login":"maestrow","id":671853,"node_id":"MDQ6VXNlcjY3MTg1Mw==","avatar_url":"https://avatars.githubusercontent.com/u/671853?v=4","gravatar_id":"","url":"https://api.github.com/users/maestrow","html_url":"https://github.com/maestrow","followers_url":"https://api.github.com/users/maestrow/followers","following_url":"https://api.github.com/users/maestrow/following{/other_user}","gists_url":"https://api.github.com/users/maestrow/gists{/gist_id}","starred_url":"https://api.github.com/users/maestrow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/maestrow/subscriptions","organizations_url":"https://api.github.com/users/maestrow/orgs","repos_url":"https://api.github.com/users/maestrow/repos","events_url":"https://api.github.com/users/maestrow/events{/privacy}","received_events_url":"https://api.github.com/users/maestrow/received_events","type":"User","site_admin":false},"parents":[{"sha":"9804de324e849c3529d3f2c71503382018b821c5","url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/commits/9804de324e849c3529d3f2c71503382018b821c5","html_url":"https://github.com/digital-boss/n8n-nodes-designpatterns-tutorial/commit/9804de324e849c3529d3f2c71503382018b821c5"},{"sha":"61b65ab15e4bfaeb3013e3375011844572ec2d59","url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/commits/61b65ab15e4bfaeb3013e3375011844572ec2d59","html_url":"https://github.com/digital-boss/n8n-nodes-designpatterns-tutorial/commit/61b65ab15e4bfaeb3013e3375011844572ec2d59"}]},"status":"ahead","ahead_by":3,"behind_by":0,"total_commits":3,"commits":[{"sha":"245baf1e8a806dc09c772dafe15e090c3d763abb","node_id":"C_kwDOHw6kqtoAKDI0NWJhZjFlOGE4MDZkYzA5Yzc3MmRhZmUxNWUwOTBjM2Q3NjNhYmI","commit":{"author":{"name":"maestrow","email":"andrew.shmelev@gmail.com","date":"2022-08-06T10:58:14Z"},"committer":{"name":"maestrow","email":"andrew.shmelev@gmail.com","date":"2022-08-06T10:58:14Z"},"message":"Extract HttpClient","tree":{"sha":"23ad7f8620aae0033f9614f814b5a7bb74c65c0f","url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/git/trees/23ad7f8620aae0033f9614f814b5a7bb74c65c0f"},"url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/git/commits/245baf1e8a806dc09c772dafe15e090c3d763abb","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/commits/245baf1e8a806dc09c772dafe15e090c3d763abb","html_url":"https://github.com/digital-boss/n8n-nodes-designpatterns-tutorial/commit/245baf1e8a806dc09c772dafe15e090c3d763abb","comments_url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/commits/245baf1e8a806dc09c772dafe15e090c3d763abb/comments","author":{"login":"maestrow","id":671853,"node_id":"MDQ6VXNlcjY3MTg1Mw==","avatar_url":"https://avatars.githubusercontent.com/u/671853?v=4","gravatar_id":"","url":"https://api.github.com/users/maestrow","html_url":"https://github.com/maestrow","followers_url":"https://api.github.com/users/maestrow/followers","following_url":"https://api.github.com/users/maestrow/following{/other_user}","gists_url":"https://api.github.com/users/maestrow/gists{/gist_id}","starred_url":"https://api.github.com/users/maestrow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/maestrow/subscriptions","organizations_url":"https://api.github.com/users/maestrow/orgs","repos_url":"https://api.github.com/users/maestrow/repos","events_url":"https://api.github.com/users/maestrow/events{/privacy}","received_events_url":"https://api.github.com/users/maestrow/received_events","type":"User","site_admin":false},"committer":{"login":"maestrow","id":671853,"node_id":"MDQ6VXNlcjY3MTg1Mw==","avatar_url":"https://avatars.githubusercontent.com/u/671853?v=4","gravatar_id":"","url":"https://api.github.com/users/maestrow","html_url":"https://github.com/maestrow","followers_url":"https://api.github.com/users/maestrow/followers","following_url":"https://api.github.com/users/maestrow/following{/other_user}","gists_url":"https://api.github.com/users/maestrow/gists{/gist_id}","starred_url":"https://api.github.com/users/maestrow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/maestrow/subscriptions","organizations_url":"https://api.github.com/users/maestrow/orgs","repos_url":"https://api.github.com/users/maestrow/repos","events_url":"https://api.github.com/users/maestrow/events{/privacy}","received_events_url":"https://api.github.com/users/maestrow/received_events","type":"User","site_admin":false},"parents":[{"sha":"9804de324e849c3529d3f2c71503382018b821c5","url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/commits/9804de324e849c3529d3f2c71503382018b821c5","html_url":"https://github.com/digital-boss/n8n-nodes-designpatterns-tutorial/commit/9804de324e849c3529d3f2c71503382018b821c5"}]},{"sha":"161bb009355b324cd07b607679f53ab5ad2bbdb6","node_id":"C_kwDOHw6kqtoAKDE2MWJiMDA5MzU1YjMyNGNkMDdiNjA3Njc5ZjUzYWI1YWQyYmJkYjY","commit":{"author":{"name":"maestrow","email":"andrew.shmelev@gmail.com","date":"2022-08-06T15:24:21Z"},"committer":{"name":"maestrow","email":"andrew.shmelev@gmail.com","date":"2022-08-06T15:24:21Z"},"message":"Merge from 4-2","tree":{"sha":"23ad7f8620aae0033f9614f814b5a7bb74c65c0f","url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/git/trees/23ad7f8620aae0033f9614f814b5a7bb74c65c0f"},"url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/git/commits/161bb009355b324cd07b607679f53ab5ad2bbdb6","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/commits/161bb009355b324cd07b607679f53ab5ad2bbdb6","html_url":"https://github.com/digital-boss/n8n-nodes-designpatterns-tutorial/commit/161bb009355b324cd07b607679f53ab5ad2bbdb6","comments_url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/commits/161bb009355b324cd07b607679f53ab5ad2bbdb6/comments","author":{"login":"maestrow","id":671853,"node_id":"MDQ6VXNlcjY3MTg1Mw==","avatar_url":"https://avatars.githubusercontent.com/u/671853?v=4","gravatar_id":"","url":"https://api.github.com/users/maestrow","html_url":"https://github.com/maestrow","followers_url":"https://api.github.com/users/maestrow/followers","following_url":"https://api.github.com/users/maestrow/following{/other_user}","gists_url":"https://api.github.com/users/maestrow/gists{/gist_id}","starred_url":"https://api.github.com/users/maestrow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/maestrow/subscriptions","organizations_url":"https://api.github.com/users/maestrow/orgs","repos_url":"https://api.github.com/users/maestrow/repos","events_url":"https://api.github.com/users/maestrow/events{/privacy}","received_events_url":"https://api.github.com/users/maestrow/received_events","type":"User","site_admin":false},"committer":{"login":"maestrow","id":671853,"node_id":"MDQ6VXNlcjY3MTg1Mw==","avatar_url":"https://avatars.githubusercontent.com/u/671853?v=4","gravatar_id":"","url":"https://api.github.com/users/maestrow","html_url":"https://github.com/maestrow","followers_url":"https://api.github.com/users/maestrow/followers","following_url":"https://api.github.com/users/maestrow/following{/other_user}","gists_url":"https://api.github.com/users/maestrow/gists{/gist_id}","starred_url":"https://api.github.com/users/maestrow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/maestrow/subscriptions","organizations_url":"https://api.github.com/users/maestrow/orgs","repos_url":"https://api.github.com/users/maestrow/repos","events_url":"https://api.github.com/users/maestrow/events{/privacy}","received_events_url":"https://api.github.com/users/maestrow/received_events","type":"User","site_admin":false},"parents":[{"sha":"245baf1e8a806dc09c772dafe15e090c3d763abb","url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/commits/245baf1e8a806dc09c772dafe15e090c3d763abb","html_url":"https://github.com/digital-boss/n8n-nodes-designpatterns-tutorial/commit/245baf1e8a806dc09c772dafe15e090c3d763abb"},{"sha":"2e583788c20a30a22166f1c5e36c530ccd7c09c9","url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/commits/2e583788c20a30a22166f1c5e36c530ccd7c09c9","html_url":"https://github.com/digital-boss/n8n-nodes-designpatterns-tutorial/commit/2e583788c20a30a22166f1c5e36c530ccd7c09c9"}]},{"sha":"2eca392a2e62b3417933f9b797ab493e8dcf4074","node_id":"C_kwDOHw6kqtoAKDJlY2EzOTJhMmU2MmIzNDE3OTMzZjliNzk3YWI0OTNlOGRjZjQwNzQ","commit":{"author":{"name":"maestrow","email":"andrew.shmelev@gmail.com","date":"2022-08-06T15:31:10Z"},"committer":{"name":"maestrow","email":"andrew.shmelev@gmail.com","date":"2022-08-06T15:31:10Z"},"message":"swap args in operation: first is client.","tree":{"sha":"b5728ef2047e51b0095f7365282f96d943d2526c","url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/git/trees/b5728ef2047e51b0095f7365282f96d943d2526c"},"url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/git/commits/2eca392a2e62b3417933f9b797ab493e8dcf4074","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/commits/2eca392a2e62b3417933f9b797ab493e8dcf4074","html_url":"https://github.com/digital-boss/n8n-nodes-designpatterns-tutorial/commit/2eca392a2e62b3417933f9b797ab493e8dcf4074","comments_url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/commits/2eca392a2e62b3417933f9b797ab493e8dcf4074/comments","author":{"login":"maestrow","id":671853,"node_id":"MDQ6VXNlcjY3MTg1Mw==","avatar_url":"https://avatars.githubusercontent.com/u/671853?v=4","gravatar_id":"","url":"https://api.github.com/users/maestrow","html_url":"https://github.com/maestrow","followers_url":"https://api.github.com/users/maestrow/followers","following_url":"https://api.github.com/users/maestrow/following{/other_user}","gists_url":"https://api.github.com/users/maestrow/gists{/gist_id}","starred_url":"https://api.github.com/users/maestrow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/maestrow/subscriptions","organizations_url":"https://api.github.com/users/maestrow/orgs","repos_url":"https://api.github.com/users/maestrow/repos","events_url":"https://api.github.com/users/maestrow/events{/privacy}","received_events_url":"https://api.github.com/users/maestrow/received_events","type":"User","site_admin":false},"committer":{"login":"maestrow","id":671853,"node_id":"MDQ6VXNlcjY3MTg1Mw==","avatar_url":"https://avatars.githubusercontent.com/u/671853?v=4","gravatar_id":"","url":"https://api.github.com/users/maestrow","html_url":"https://github.com/maestrow","followers_url":"https://api.github.com/users/maestrow/followers","following_url":"https://api.github.com/users/maestrow/following{/other_user}","gists_url":"https://api.github.com/users/maestrow/gists{/gist_id}","starred_url":"https://api.github.com/users/maestrow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/maestrow/subscriptions","organizations_url":"https://api.github.com/users/maestrow/orgs","repos_url":"https://api.github.com/users/maestrow/repos","events_url":"https://api.github.com/users/maestrow/events{/privacy}","received_events_url":"https://api.github.com/users/maestrow/received_events","type":"User","site_admin":false},"parents":[{"sha":"161bb009355b324cd07b607679f53ab5ad2bbdb6","url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/commits/161bb009355b324cd07b607679f53ab5ad2bbdb6","html_url":"https://github.com/digital-boss/n8n-nodes-designpatterns-tutorial/commit/161bb009355b324cd07b607679f53ab5ad2bbdb6"}]}],"files":[{"sha":"91948a344cb26fa3f18d11d8a15c736da0bf267b","filename":"credentials/FakeCrmApi.credentials.ts","status":"modified","additions":19,"deletions":2,"changes":21,"blob_url":"https://github.com/digital-boss/n8n-nodes-designpatterns-tutorial/blob/2eca392a2e62b3417933f9b797ab493e8dcf4074/credentials%2FFakeCrmApi.credentials.ts","raw_url":"https://github.com/digital-boss/n8n-nodes-designpatterns-tutorial/raw/2eca392a2e62b3417933f9b797ab493e8dcf4074/credentials%2FFakeCrmApi.credentials.ts","contents_url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/contents/credentials%2FFakeCrmApi.credentials.ts?ref=2eca392a2e62b3417933f9b797ab493e8dcf4074","patch":"@@ -4,7 +4,9 @@ import {\n } from 'n8n-workflow';\n \n export interface IFakeCrmApiCredentials {\n-\thost: string;\n+\turl: string;\n+\tusername: string;\n+\tpassword: string;\n }\n \n export class FakeCrmApi implements ICredentialType {\n@@ -14,9 +16,24 @@ export class FakeCrmApi implements ICredentialType {\n \tproperties: INodeProperties[] = [\n \t\t{\n \t\t\tdisplayName: 'Host',\n-\t\t\tname: 'host',\n+\t\t\tname: 'url',\n \t\t\ttype: 'string',\n \t\t\tdefault: 'http://localhost:3000',\n \t\t},\n+\t\t{\n+\t\t\tdisplayName: 'User',\n+\t\t\tname: 'user',\n+\t\t\ttype: 'string',\n+\t\t\tdefault: '',\n+\t\t},\n+\t\t{\n+\t\t\tdisplayName: 'Passsword',\n+\t\t\tname: 'password',\n+\t\t\ttype: 'string',\n+\t\t\ttypeOptions: {\n+\t\t\t\tpassword: true,\n+\t\t\t},\n+\t\t\tdefault: '',\n+\t\t},\n \t];\n }"},{"sha":"fd811c506e299e925e4a493dbd65c149421e6a59","filename":"nodes/FakeCrm/FakeCrm.node.ts","status":"modified","additions":10,"deletions":4,"changes":14,"blob_url":"https://github.com/digital-boss/n8n-nodes-designpatterns-tutorial/blob/2eca392a2e62b3417933f9b797ab493e8dcf4074/nodes%2FFakeCrm%2FFakeCrm.node.ts","raw_url":"https://github.com/digital-boss/n8n-nodes-designpatterns-tutorial/raw/2eca392a2e62b3417933f9b797ab493e8dcf4074/nodes%2FFakeCrm%2FFakeCrm.node.ts","contents_url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/contents/nodes%2FFakeCrm%2FFakeCrm.node.ts?ref=2eca392a2e62b3417933f9b797ab493e8dcf4074","patch":"@@ -21,8 +21,9 @@ import { resourcesConst } from './descriptions/generated/resourceOperations';\n import { ResOpExecutor, ResOpResolver } from '@digital-boss/n8n-designpatterns/dist/usecases/res-op';\n import { ReturnParamsExecutor } from '@digital-boss/n8n-designpatterns/dist/usecases';\n import { getNodeExecFn, StateBase } from '@digital-boss/n8n-designpatterns/dist';\n-import { fakeCrmRequest } from './GenericFunctions';\n import { operationMethods } from './backend/operations';\n+import { HttpClientBasic } from './backend/HttpClientBasic';\n+import { IFakeCrmApiCredentials } from 'credentials/FakeCrmApi.credentials';\n \n const getTags = (param: IDataObject): string[] => {\n \treturn (param.tagProps as string[] || []).map((i: any) => i.tag)\n@@ -63,14 +64,17 @@ export class FakeCrm implements INodeType {\n \t};\n \n \tasync execute(this: IExecuteFunctions): Promise<INodeExecutionData[][]> {\n-\t\tconst execItemFn = getItemExecutor(this)\n+\t\tconst execItemFn = await getItemExecutor(this)\n \t\tconst nodeExec = getNodeExecFn(execItemFn);\n \t\treturn nodeExec.call(this);\n \t}\n \n }\n \n-const getItemExecutor = (execFns: IExecuteFunctions) => async (itemIndex: number): Promise<any> => {\n+const getItemExecutor = async (execFns: IExecuteFunctions) => {\n+\n+\tconst creds = await (execFns.getCredentials('fakeCrmApi')) as unknown as IFakeCrmApiCredentials\n+\tconst httpClient = new HttpClientBasic(execFns.helpers.request, creds)\n \tconst resourceName = execFns.getNodeParameter('resource', 0) as typeof resourcesConst[number];\n \tconst operationName = execFns.getNodeParameter('operation', 0) as string;\n \n@@ -84,5 +88,7 @@ const getItemExecutor = (execFns: IExecuteFunctions) => async (itemIndex: number\n \t\tthrow new NodeOperationError(execFns.getNode(), `Operation not found: ${operationName}`);\n \t}\n \n-\treturn operation(execFns, itemIndex);\n+\treturn async (itemIndex: number): Promise<any> => {\n+\t\treturn operation(httpClient, execFns, itemIndex);\n+\t}\n }"},{"sha":"13ea4b29915680716c490cba02168cc8455e112e","filename":"nodes/FakeCrm/GenericFunctions.ts","status":"removed","additions":0,"deletions":45,"changes":45,"blob_url":"https://github.com/digital-boss/n8n-nodes-designpatterns-tutorial/blob/2e583788c20a30a22166f1c5e36c530ccd7c09c9/nodes%2FFakeCrm%2FGenericFunctions.ts","raw_url":"https://github.com/digital-boss/n8n-nodes-designpatterns-tutorial/raw/2e583788c20a30a22166f1c5e36c530ccd7c09c9/nodes%2FFakeCrm%2FGenericFunctions.ts","contents_url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/contents/nodes%2FFakeCrm%2FGenericFunctions.ts?ref=2e583788c20a30a22166f1c5e36c530ccd7c09c9","patch":"@@ -1,45 +0,0 @@\n-import { OptionsWithUri } from \"request\";\n-\n-import {\n-\tIExecuteFunctions,\n-\tIExecuteSingleFunctions,\n-\tIHookFunctions,\n-\tILoadOptionsFunctions,\n-} from \"n8n-core\";\n-\n-import { IDataObject, NodeApiError, NodeOperationError } from \"n8n-workflow\";\n-import { IFakeCrmApiCredentials } from \"credentials/FakeCrmApi.credentials\";\n-\n-export async function fakeCrmRequest(\n-\tthis:\n-\t\t| IHookFunctions\n-\t\t| IExecuteFunctions\n-\t\t| IExecuteSingleFunctions\n-\t\t| ILoadOptionsFunctions,\n-\tmethod: string,\n-\tpath: string,\n-\tbody: object = {},\n-): Promise<any> {\n-\n-\tconst creds = (await this.getCredentials(\"fakeCrmApi\")) as unknown as IFakeCrmApiCredentials;\n-\n-\tif (creds === undefined) {\n-\t\tthrow new NodeOperationError(\n-\t\t\tthis.getNode(),\n-\t\t\t\"No credentials got returned!\"\n-\t\t);\n-\t}\n-\n-\tconst options: OptionsWithUri = {\n-\t\tmethod,\n-\t\tbody,\n-\t\turi: creds.host + path,\n-\t\tjson: true,\n-\t};\n-\n-\ttry {\n-\t\treturn this.helpers.request!(options);\n-\t} catch (error) {\n-\t\tthrow new NodeApiError(this.getNode(), error);\n-\t}\n-}"},{"sha":"5aad7166b7f716cf4ae6518e91ed54a3654110d5","filename":"nodes/FakeCrm/backend/HttpClientBasic.ts","status":"added","additions":33,"deletions":0,"changes":33,"blob_url":"https://github.com/digital-boss/n8n-nodes-designpatterns-tutorial/blob/2eca392a2e62b3417933f9b797ab493e8dcf4074/nodes%2FFakeCrm%2Fbackend%2FHttpClientBasic.ts","raw_url":"https://github.com/digital-boss/n8n-nodes-designpatterns-tutorial/raw/2eca392a2e62b3417933f9b797ab493e8dcf4074/nodes%2FFakeCrm%2Fbackend%2FHttpClientBasic.ts","contents_url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/contents/nodes%2FFakeCrm%2Fbackend%2FHttpClientBasic.ts?ref=2eca392a2e62b3417933f9b797ab493e8dcf4074","patch":"@@ -0,0 +1,33 @@\n+import { IDataObject } from 'n8n-workflow';\n+import { OptionsWithUri } from 'request';\n+import { IHttpClient } from './interfaces';\n+\n+export interface IBasicAuth {\n+\turl: string;\n+\tusername: string;\n+\tpassword: string;\n+}\n+\n+type RequestFn = (uriOrObject: string | IDataObject | any, options?: IDataObject) => Promise<any>;\n+\n+const normalizeUrl = (url: string) => url.endsWith('/') ? url.slice(0, -1) : url;\n+\n+/**\n+ * HTTP Client with Basic authorization\n+ */\n+export class HttpClientBasic implements IHttpClient {\n+\n+\tprivate token: string;\n+\tprivate url: string;\n+\n+\tconstructor(private requestFn: RequestFn, private creds: IBasicAuth) {\n+\t\tthis.token = Buffer.from(`${this.creds.username}:${this.creds.password}`).toString('base64')\n+\t\tthis.url = normalizeUrl(this.creds.url);\n+\t}\n+\n+\trequest (options: OptionsWithUri) {\n+\t\toptions.headers = options.headers || {};\n+\t\toptions.headers.Authorization = options.headers.Authorization || `Basic ${this.token}`;\n+\t\treturn this.requestFn(Object.assign({}, options, { uri: this.url + options.uri }));\n+\t};\n+}"},{"sha":"2b4d418367c19e854228e6164b81cd19bb05b5bd","filename":"nodes/FakeCrm/backend/interfaces.ts","status":"added","additions":8,"deletions":0,"changes":8,"blob_url":"https://github.com/digital-boss/n8n-nodes-designpatterns-tutorial/blob/2eca392a2e62b3417933f9b797ab493e8dcf4074/nodes%2FFakeCrm%2Fbackend%2Finterfaces.ts","raw_url":"https://github.com/digital-boss/n8n-nodes-designpatterns-tutorial/raw/2eca392a2e62b3417933f9b797ab493e8dcf4074/nodes%2FFakeCrm%2Fbackend%2Finterfaces.ts","contents_url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/contents/nodes%2FFakeCrm%2Fbackend%2Finterfaces.ts?ref=2eca392a2e62b3417933f9b797ab493e8dcf4074","patch":"@@ -0,0 +1,8 @@\n+import { OptionsWithUri } from 'request';\n+\n+/**\n+ * Makes HTTP requests\n+ */\n+ export interface IHttpClient {\n+\trequest: (opts: OptionsWithUri) => Promise<any>;\n+}"},{"sha":"c4d7fdee8a3e89e7e199bbadf252cb32a0026212","filename":"nodes/FakeCrm/backend/operations.ts","status":"modified","additions":87,"deletions":57,"changes":144,"blob_url":"https://github.com/digital-boss/n8n-nodes-designpatterns-tutorial/blob/2eca392a2e62b3417933f9b797ab493e8dcf4074/nodes%2FFakeCrm%2Fbackend%2Foperations.ts","raw_url":"https://github.com/digital-boss/n8n-nodes-designpatterns-tutorial/raw/2eca392a2e62b3417933f9b797ab493e8dcf4074/nodes%2FFakeCrm%2Fbackend%2Foperations.ts","contents_url":"https://api.github.com/repos/digital-boss/n8n-nodes-designpatterns-tutorial/contents/nodes%2FFakeCrm%2Fbackend%2Foperations.ts?ref=2eca392a2e62b3417933f9b797ab493e8dcf4074","patch":"@@ -1,11 +1,11 @@\n+import { OptionsWithUri } from 'request';\n import {\n \tIExecuteFunctions,\n } from 'n8n-core';\n-\n import { IDataObject } from \"n8n-workflow\";\n-import { fakeCrmRequest } from '../GenericFunctions';\n+import { IHttpClient } from './interfaces';\n \n-type OpFn = (execFns: IExecuteFunctions, itemIndex: number) => Promise<any>;\n+type OpFn = (client: IHttpClient, execFns: IExecuteFunctions, itemIndex: number) => Promise<any>;\n type OpContainer = Record<string, OpFn>\n \n const getTags = (param: IDataObject): string[] => {\n@@ -14,92 +14,122 @@ const getTags = (param: IDataObject): string[] => {\n \n const post: OpContainer = {\n \n-\tcreate: (execFns, itemIndex) => {\n-\t\tconst method = 'POST';\n-\t\tconst path = '/post';\n-\t\tconst tagsColl1 = execFns.getNodeParameter('tags', itemIndex) as IDataObject;\n-\t\tconst tags = getTags(tagsColl1);\n-\t\tconst body = Object.assign({},\n-\t\t\texecFns.getNodeParameter('additionalFields', itemIndex) as IDataObject,\n-\t\t\t{tags}\n-\t\t);\n-\t\treturn fakeCrmRequest.call(execFns, method, path, body)\n+\tcreate: (client, execFns, itemIndex) => {\n+\t\tconst tagsColl = execFns.getNodeParameter('tags', itemIndex) as IDataObject;\n+\t\tconst tags = getTags(tagsColl);\n+\t\tconst opts: OptionsWithUri = {\n+\t\t\tmethod: 'POST',\n+\t\t\tbody: Object.assign({},\n+\t\t\t\texecFns.getNodeParameter('additionalFields', itemIndex) as IDataObject,\n+\t\t\t\t{tags}\n+\t\t\t),\n+\t\t\turi: '/post',\n+\t\t\tjson: true,\n+\t\t}\n+\t\treturn client.request(opts);\n \t},\n \n-\tupdate: (execFns, itemIndex) => {\n-\t\tconst method = 'PUT';\n+\tupdate: (client, execFns, itemIndex) => {\n \t\tconst id = execFns.getNodeParameter('id', itemIndex) as string;\n-\t\tconst path = `/post/${id}`;\n-\t\tconst tagsColl2 = execFns.getNodeParameter('tags', itemIndex) as IDataObject;\n-\t\tconst tags = getTags(tagsColl2);\n-\t\tconst body = Object.assign({},\n-\t\t\texecFns.getNodeParameter('additionalFields', itemIndex) as IDataObject,\n-\t\t\t{tags}\n-\t\t);\n-\t\treturn fakeCrmRequest.call(execFns, method, path, body).then(res => res || {});\n+\t\tconst tagsColl = execFns.getNodeParameter('tags', itemIndex) as IDataObject;\n+\t\tconst tags = getTags(tagsColl);\n+\t\tconst opts: OptionsWithUri = {\n+\t\t\tmethod: 'PUT',\n+\t\t\tbody: Object.assign({},\n+\t\t\t\texecFns.getNodeParameter('additionalFields', itemIndex) as IDataObject,\n+\t\t\t\t{tags}\n+\t\t\t),\n+\t\t\turi: `/post/${id}`,\n+\t\t\tjson: true,\n+\t\t}\n+\t\treturn client.request(opts).then(res => res || {});\n \t},\n \n-\tget: (execFns, itemIndex) => {\n-\t\tconst method = 'GET';\n+\tget: (client, execFns, itemIndex) => {\n \t\tconst id = execFns.getNodeParameter('id', itemIndex) as string;\n-\t\tconst path = `/post/${id}`;\n-\t\treturn fakeCrmRequest.call(execFns, method, path)\n+\t\tconst opts: OptionsWithUri = {\n+\t\t\tmethod: 'GET',\n+\t\t\turi: `/post/${id}`,\n+\t\t\tjson: true,\n+\t\t}\n+\t\treturn client.request(opts);\n \t},\n \n-\tgetAll: (execFns, itemIndex) => {\n-\t\tconst method = 'GET';\n-\t\tconst path = '/post';\n-\t\treturn fakeCrmRequest.call(execFns, method, path)\n+\tgetAll: (client, execFns, itemIndex) => {\n+\t\tconst opts: OptionsWithUri = {\n+\t\t\tmethod: 'GET',\n+\t\t\turi: `/post`,\n+\t\t\tjson: true,\n+\t\t}\n+\t\treturn client.request(opts);\n \t},\n \n-\tdelete: (execFns, itemIndex) => {\n-\t\tconst method = 'DELETE';\n+\tdelete: (client, execFns, itemIndex) => {\n \t\tconst id = execFns.getNodeParameter('id', itemIndex) as string;\n-\t\tconst path = `/post/${id}`;\n-\t\treturn fakeCrmRequest.call(execFns, method, path)\n+\t\tconst opts: OptionsWithUri = {\n+\t\t\tmethod: 'DELETE',\n+\t\t\turi: `/post/${id}`,\n+\t\t\tjson: true,\n+\t\t}\n+\t\treturn client.request(opts);\n \t}\n }\n \n const comment: OpContainer = {\n \n-\tcreate: (execFns, itemIndex) => {\n-\t\tconst method = 'POST';\n+\tcreate: (client, execFns, itemIndex) => {\n \t\tconst postId = execFns.getNodeParameter('postId', itemIndex) as string;\n-\t\tconst path = `/post/${postId}/comment`;\n-\t\tconst body = execFns.getNodeParameter('additionalFields', itemIndex) as IDataObject;\n-\t\treturn fakeCrmRequest.call(execFns, method, path, body)\n+\t\tconst opts: OptionsWithUri = {\n+\t\t\tmethod: 'POST',\n+\t\t\tbody: execFns.getNodeParameter('additionalFields', itemIndex) as IDataObject,\n+\t\t\turi: `/post/${postId}/comment`,\n+\t\t\tjson: true,\n+\t\t}\n+\t\treturn client.request(opts);\n \t},\n \n-\tupdate: (execFns, itemIndex) => {\n-\t\tconst method = 'PUT';\n+\tupdate: (client, execFns, itemIndex) => {\n \t\tconst postId = execFns.getNodeParameter('postId', itemIndex) as string;\n \t\tconst id = execFns.getNodeParameter('id', itemIndex) as string;\n-\t\tconst path = `/post/${postId}/comment/${id}`;\n-\t\tconst body = execFns.getNodeParameter('additionalFields', itemIndex) as IDataObject;\n-\t\treturn fakeCrmRequest.call(execFns, method, path, body).then(res => res || {});\n+\t\tconst opts: OptionsWithUri = {\n+\t\t\tmethod: 'PUT',\n+\t\t\tbody: execFns.getNodeParameter('additionalFields', itemIndex) as IDataObject,\n+\t\t\turi: `/post/${postId}/comment/${id}`,\n+\t\t\tjson: true,\n+\t\t}\n+\t\treturn client.request(opts).then(res => res || {});\n \t},\n \n-\tget: (execFns, itemIndex) => {\n-\t\tconst method = 'GET';\n+\tget: (client, execFns, itemIndex) => {\n \t\tconst postId = execFns.getNodeParameter('postId', itemIndex) as string;\n \t\tconst id = execFns.getNodeParameter('id', itemIndex) as string;\n-\t\tconst path = `/post/${postId}/comment/${id}`;\n-\t\treturn fakeCrmRequest.call(execFns, method, path)\n+\t\tconst opts: OptionsWithUri = {\n+\t\t\tmethod: 'GET',\n+\t\t\turi: `/post/${postId}/comment/${id}`,\n+\t\t\tjson: true,\n+\t\t}\n+\t\treturn client.request(opts);\n \t},\n \n-\tgetAll:(execFns, itemIndex) => {\n-\t\tconst method = 'GET';\n+\tgetAll:(client, execFns, itemIndex) => {\n \t\tconst postId = execFns.getNodeParameter('postId', itemIndex) as string;\n-\t\tconst path = `/post/${postId}/comment`;\n-\t\treturn fakeCrmRequest.call(execFns, method, path)\n+\t\tconst opts: OptionsWithUri = {\n+\t\t\tmethod: 'GET',\n+\t\t\turi: `/post/${postId}/comment`,\n+\t\t\tjson: true,\n+\t\t}\n+\t\treturn client.request(opts);\n \t},\n \n-\tdelete: (execFns, itemIndex) => {\n-\t\tconst method = 'DELETE';\n+\tdelete: (client, execFns, itemIndex) => {\n \t\tconst postId = execFns.getNodeParameter('postId', itemIndex) as string;\n \t\tconst id = execFns.getNodeParameter('id', itemIndex) as string;\n-\t\tconst path = `/post/${postId}/comment/${id}`;\n-\t\treturn fakeCrmRequest.call(execFns, method, path)\n+\t\tconst opts: OptionsWithUri = {\n+\t\t\tmethod: 'DELETE',\n+\t\t\turi: `/post/${postId}/comment/${id}`,\n+\t\t\tjson: true,\n+\t\t}\n+\t\treturn client.request(opts);\n \t}\n }\n "}]}